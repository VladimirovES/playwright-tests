name: qase_run

on:
  workflow_dispatch:
    inputs:
      qase_api_base_url:
        description: 'Qase API URL'
        required: true
      qase_report:
        description: 'Enabled/disabled reporting to Qase'
        required: true
      qase_project_code:
        description: 'Qase project code'
        required: true
      qase_run_id:
        description: 'Qase Run ID'
        required: true
      qase_run_complete:
        description: 'Qase Run autocomplete'
        required: true
env:
  QASE_API_BASE_URL: ${{ inputs.qase_api_base_url }}
  QASE_REPORT: ${{ inputs.qase_report }}
  QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
  QASE_RUN_ID: ${{ inputs.qase_run_id }}
  QASE_RUN_COMPLETE: ${{ inputs.qase_run_complete }}
  QASE_API_TOKEN: ${{ secrets.QASE_API_KEY }}


permissions:
  contents: read
  pages: write
  id-token: write


jobs:

  build-php:
    runs-on: ubuntu-latest
    steps:
      - uses: qase-tms/qase-link-run@main
        env:
          QASE_API_TOKEN: ${{ env.QASE_API_TOKEN }}
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: "Set branch env for tests"
        shell: bash
        run: |
          echo "GIT_BRANCH_TESTS=${GITHUB_REF##*/}" >> $GITHUB_ENV


      - name: Checkout test code
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GIT_BRANCH_TESTS }}
          path: test-rep

      - name: 'Set name image'
        shell: bash
        run: |
          echo "MY_IMAGE=playwrightimage" >> $GITHUB_ENV


      - name: Build Docker image
        run: docker build test-rep/ -t ${{ env.MY_IMAGE}} -f test-rep/Dockerfile


      - name: "Set test container env"
        shell: bash
        run: |
          echo "TEST_CONTAINER=${{ env.GIT_BRANCH_TESTS }}-test" >> $GITHUB_ENV

      - name: "Run tests"
        run: |
          if [[ -n "$(docker ps -a | grep ${{ env.TEST_CONTAINER }})" ]]; then docker rm -f ${{ env.TEST_CONTAINER }}; fi
          docker run  \
            --name ${{ env.TEST_CONTAINER }}\
            ${{ env.MY_IMAGE }} pytest tests/ --qase-mode=testops \
               --qase-testops-api-token=${{ secrets.QASE_API_KEY }} \
               --qase-testops-project=${{ env.QASE_PROJECT_CODE }} --base_url=https://demoqa.com/ 


